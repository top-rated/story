name: Apply /apply patch
on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Detect /apply and extract diff
        id: detect
        env:
          BODY: ${{ github.event.comment.body }}
        run: |
          set -e
          body="$(printf "%s" "$BODY" | sed '1s/^[[:space:]\ufeff]*//')"
          first="$(printf "%s" "$body" | head -n1)"
          case "$first" in
            "/apply"|"/apply "*) title="${first#/apply }" ;;
            *) echo "ok=false" >> $GITHUB_OUTPUT; exit 0 ;;
          esac
          echo "ok=true" >> $GITHUB_OUTPUT
          printf 'title=%s\n' "$title" >> $GITHUB_OUTPUT

          # пишем патч во временную директорию, которую checkout не трогает
          awk '
            tolower($0) ~ /^```[[:space:]]*diff[[:space:]]*$/ && !inside {inside=1; next}
            /^```/ && inside {inside=0; exit}
            inside {print}
          ' <<< "$body" > "$RUNNER_TEMP/patch.diff"

          [ -s "$RUNNER_TEMP/patch.diff" ] || { echo "ok=false" >> $GITHUB_OUTPUT; exit 0; }
          echo "patch=$RUNNER_TEMP/patch.diff" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        if: steps.detect.outputs.ok == 'true'
        with:
          fetch-depth: 0

      - name: Apply and commit
        if: steps.detect.outputs.ok == 'true'
        env:
          PATCH: ${{ steps.detect.outputs.patch }}
          TITLE: ${{ steps.detect.outputs.title }}
        run: |
          set -euxo pipefail
          BR="chatgpt/apply-${{ github.event.comment.id }}"
          git switch -c "$BR"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git apply --check --whitespace=fix "$PATCH"
          git apply --whitespace=fix "$PATCH"
          git add -A
          git commit -m "${TITLE:-apply patch}"

      - name: Open draft PR
        if: steps.detect.outputs.ok == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          title: ${{ steps.detect.outputs.title || 'apply patch' }}
          commit-message: ${{ steps.detect.outputs.title || 'apply patch' }}
          branch: chatgpt/apply-${{ github.event.comment.id }}
          base: ${{ github.event.repository.default_branch }}
          draft: true
          body: Automated from ${{ github.event.comment.html_url }}
