name: Apply /apply-main to default branch
on:
  issue_comment:
    types:
      - created
      - edited

permissions:
  contents: write
  pull-requests: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Parse command and extract diff
        id: detect
        env:
          BODY: ${{ github.event.comment.body }}
        shell: bash
        run: |
          set -e
          body="$(printf "%s" "$BODY" | sed '1s/^[[:space:]]*//')"
          first="$(printf "%s" "$body" | head -n1)"
          case "$first" in
            "/apply-main"|"/apply-main "*) title="${first#/apply-main }" ;;
            *) echo "ok=false" >> "$GITHUB_OUTPUT"; exit 0 ;;
          esac
          echo "ok=true" >> "$GITHUB_OUTPUT"
          printf 'title=%s\n' "$title" >> "$GITHUB_OUTPUT"

          awk '
            tolower($0) ~ /^```[[:space:]]*diff[[:space:]]*$/ && !inside {inside=1; next}
            /^```/ && inside {inside=0; exit}
            inside {print}
          ' <<< "$body" > "$RUNNER_TEMP/patch.diff"

          if [ ! -s "$RUNNER_TEMP/patch.diff" ]; then
            echo "ok=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          printf 'patch=%s\n' "$RUNNER_TEMP/patch.diff" >> "$GITHUB_OUTPUT"

      - name: Checkout
        if: steps.detect.outputs.ok == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Commit directly to default branch
        if: steps.detect.outputs.ok == 'true'
        id: commit_main
        shell: bash
        env:
          PATCH: ${{ steps.detect.outputs.patch }}
          TITLE: ${{ steps.detect.outputs.title }}
          DEFAULT: ${{ github.event.repository.default_branch }}
        run: |
          set -euxo pipefail
          git fetch origin "$DEFAULT"
          git checkout -B "$DEFAULT" "origin/$DEFAULT"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git apply --check --whitespace=fix "$PATCH"
          git apply --whitespace=fix "$PATCH"
          git add -A
          git commit -m "${TITLE:-apply patch}"
          if git push origin "HEAD:$DEFAULT"; then
            echo "pushed=true" >> "$GITHUB_OUTPUT"
          else
            echo "pushed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Fallback: push to global branch
        if: steps.detect.outputs.ok == 'true' && steps.commit_main.outputs.pushed == 'false'
        shell: bash
        run: |
          set -euxo pipefail
          git switch -c chatgpt/apply || git switch chatgpt/apply
          git push -u origin chatgpt/apply

      - name: Open or update draft PR (fallback)
        if: steps.detect.outputs.ok == 'true' && steps.commit_main.outputs.pushed == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const head  = 'chatgpt/apply';
            const base  = context.payload.repository.default_branch;
            const prs = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${head}` });
            if (prs.data.length === 0) {
              await github.rest.pulls.create({
                owner, repo, title: 'ChatGPT Apply (global PR)',
                head, base, draft: true,
                body: 'Глобальный PR: изменения из /apply-main.'
              });
            }
